{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/thirumurugansivalingam/Desktop/winks/bera/src/provider/Wallet.tsx"],"sourcesContent":["\"use client\"\nimport React from \"react\";\nimport \"@rainbow-me/rainbowkit/styles.css\";\nimport {\n  ConnectButton\n} from \"@rainbow-me/rainbowkit\";\nimport { Button } from \"@/components/ui/button\";\n\n\nconst CustomButton = () => {\n  return (\n          <ConnectButton.Custom>\n            {({\n              account,\n              chain,\n              openAccountModal,\n              openChainModal,\n              openConnectModal,\n              authenticationStatus,\n              mounted,\n            }) => {\n              const ready = mounted && authenticationStatus !== \"loading\";\n              const connected =\n                ready &&\n                account &&\n                chain &&\n                (!authenticationStatus ||\n                  authenticationStatus === \"authenticated\");\n\n              return (\n                <div\n                  {...(!ready && {\n                    \"aria-hidden\": true,\n                    style: {\n                      opacity: 0,\n                      pointerEvents: \"none\",\n                      userSelect: \"none\",\n                    },\n                  })}\n                >\n                  {(() => {\n                    if (!connected) {\n                      return (\n                        <button\n                          className=\"connect-button w-full\"\n                          onClick={openConnectModal}\n                          type=\"button\"\n                        >\n                          Connect Wallet\n                        </button>\n                      );\n                    }\n\n                    if (chain.unsupported) {\n                      return (\n                        <button\n                          className=\" bg-red-500\"\n                          onClick={openChainModal}\n                          type=\"button\"\n                        >\n                          Wrong network\n                        </button>\n                      );\n                    }\n\n                    return (\n                      <div className=\"\">\n                        <button\n                          className=\"connect-button w-full\"\n                          onClick={openAccountModal}\n                          type=\"button\"\n                        >\n                          {account.displayName}\n                          {account.displayBalance\n                            ? ` (${account.displayBalance})`\n                            : \"\"}\n                        </button>\n                      </div>\n                    );\n                  })()}\n                </div>\n              );\n            }}\n          </ConnectButton.Custom>\n  );\n};\n\nexport default CustomButton;"],"names":[],"mappings":";;;;AAGA;AAHA;;;;AASA,MAAM,eAAe;IACnB,qBACQ,6LAAC,iLAAA,CAAA,gBAAa,CAAC,MAAM;kBAClB,CAAC,EACA,OAAO,EACP,KAAK,EACL,gBAAgB,EAChB,cAAc,EACd,gBAAgB,EAChB,oBAAoB,EACpB,OAAO,EACR;YACC,MAAM,QAAQ,WAAW,yBAAyB;YAClD,MAAM,YACJ,SACA,WACA,SACA,CAAC,CAAC,wBACA,yBAAyB,eAAe;YAE5C,qBACE,6LAAC;gBACE,GAAI,CAAC,SAAS;oBACb,eAAe;oBACf,OAAO;wBACL,SAAS;wBACT,eAAe;wBACf,YAAY;oBACd;gBACF,CAAC;0BAEA,CAAC;oBACA,IAAI,CAAC,WAAW;wBACd,qBACE,6LAAC;4BACC,WAAU;4BACV,SAAS;4BACT,MAAK;sCACN;;;;;;oBAIL;oBAEA,IAAI,MAAM,WAAW,EAAE;wBACrB,qBACE,6LAAC;4BACC,WAAU;4BACV,SAAS;4BACT,MAAK;sCACN;;;;;;oBAIL;oBAEA,qBACE,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BACC,WAAU;4BACV,SAAS;4BACT,MAAK;;gCAEJ,QAAQ,WAAW;gCACnB,QAAQ,cAAc,GACnB,CAAC,EAAE,EAAE,QAAQ,cAAc,CAAC,CAAC,CAAC,GAC9B;;;;;;;;;;;;gBAIZ,CAAC;;;;;;QAGP;;;;;;AAGZ;KA5EM;uCA8ES","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///Users/thirumurugansivalingam/Desktop/winks/bera/src/components/modals/TransactionModal.tsx"],"sourcesContent":["import { Loader2, X, ExternalLink, CheckCircle2 } from \"lucide-react\";\n\ninterface TransactionModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  txHash: string;\n  isProcessing: boolean;\n  isApproving: boolean;\n}\n\nconst TransactionModal = ({\n  isOpen,\n  onClose,\n  txHash,\n  isProcessing,\n  isApproving,\n}: TransactionModalProps) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-xl p-6 max-w-md w-full mx-4 relative\">\n        <button\n          onClick={onClose}\n          className=\"absolute right-4 top-4 text-gray-500 hover:text-gray-700\"\n        >\n          <X size={24} />\n        </button>\n\n        <div className=\"text-center space-y-4\">\n          {(isProcessing || isApproving) && (\n            <>\n              <Loader2 className=\"animate-spin mx-auto\" size={48} />\n              <h3 className=\"text-xl font-medium\">\n                {isApproving ? \"Approving Transaction...\" : \"Processing Transaction...\"}\n              </h3>\n              <p className=\"text-gray-600\">\n                {isApproving\n                  ? \"Please wait while we approve your transaction\"\n                  : \"Please wait while your transaction is being processed\"}\n              </p>\n            </>\n          )}\n\n          {txHash && !isProcessing && !isApproving && (\n            <>\n              <CheckCircle2 className=\"text-green-500 mx-auto\" size={48} />\n              <h3 className=\"text-xl font-medium\">Transaction Successful!</h3>\n              <p className=\" text-black\"> You just scored <span className=\"font-semibold\">100</span> wink points!</p>\n              <div className=\"flex justify-center gap-4 mt-4\">\n                <button\n                  onClick={() => window.open(`https://berascan.com/tx/${txHash}`, '_blank')}\n                  className=\"flex items-center gap-2 bg-gray-800 text-white px-4 py-2 rounded-lg hover:bg-gray-700\"\n                >\n                  View Transaction <ExternalLink size={16} />\n                </button>\n                <button\n                  onClick={onClose}\n                  className=\"px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50\"\n                >\n                  Close\n                </button>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TransactionModal; "],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AAAA;;;AAUA,MAAM,mBAAmB,CAAC,EACxB,MAAM,EACN,OAAO,EACP,MAAM,EACN,YAAY,EACZ,WAAW,EACW;IACtB,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBACC,SAAS;oBACT,WAAU;8BAEV,cAAA,6LAAC,+LAAA,CAAA,IAAC;wBAAC,MAAM;;;;;;;;;;;8BAGX,6LAAC;oBAAI,WAAU;;wBACZ,CAAC,gBAAgB,WAAW,mBAC3B;;8CACE,6LAAC,oNAAA,CAAA,UAAO;oCAAC,WAAU;oCAAuB,MAAM;;;;;;8CAChD,6LAAC;oCAAG,WAAU;8CACX,cAAc,6BAA6B;;;;;;8CAE9C,6LAAC;oCAAE,WAAU;8CACV,cACG,kDACA;;;;;;;;wBAKT,UAAU,CAAC,gBAAgB,CAAC,6BAC3B;;8CACE,6LAAC,wNAAA,CAAA,eAAY;oCAAC,WAAU;oCAAyB,MAAM;;;;;;8CACvD,6LAAC;oCAAG,WAAU;8CAAsB;;;;;;8CACpC,6LAAC;oCAAE,WAAU;;wCAAc;sDAAiB,6LAAC;4CAAK,WAAU;sDAAgB;;;;;;wCAAU;;;;;;;8CACtF,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CACC,SAAS,IAAM,OAAO,IAAI,CAAC,CAAC,wBAAwB,EAAE,QAAQ,EAAE;4CAChE,WAAU;;gDACX;8DACkB,6LAAC,yNAAA,CAAA,eAAY;oDAAC,MAAM;;;;;;;;;;;;sDAEvC,6LAAC;4CACC,SAAS;4CACT,WAAU;sDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUjB;KA3DM;uCA6DS","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file:///Users/thirumurugansivalingam/Desktop/winks/bera/src/components/ibgt/page.tsx"],"sourcesContent":["\"use client\"\nimport CustomButton from \"@/provider/Wallet\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { useEffect, useState } from \"react\";\nimport { useAccount, usePublicClient, useWriteContract } from \"wagmi\";\nimport contractABI from \"@/abi/contractABI.json\";\nimport approvalContractABI from \"@/abi/iBGTcontractABI.json\"\nimport { berachain } from 'viem/chains';\nimport { ethers } from 'ethers';\nimport { Loader2 } from \"lucide-react\";\nimport TransactionModal from \"../modals/TransactionModal\";\n\n\n\ninterface Token {\n  symbol: string;\n  price: number;\n}\n\ninterface RewardToken {\n  apr?: number; // Assuming `apr` can be undefined\n}\n\nconst IBGTPage = () => {\n  const [statsData, setStatsData] = useState(false);\n  const [aprValue, setAprValue] = useState<number>();\n  const [tvlvalue, setTvlValue] = useState<number>(0);\n  const [iBgtPrice, setiBgtPrice] = useState<number>(0);\n  const [inputValue, setInputValue] = useState('');\n  const [isValidInput, setIsValidInput] = useState(false);\n  const [insufficientBalance, setInsufficientBalance] = useState(false);\n  const [approvalProcessing, setApprovalProcessing] = useState(false);\n  const [isTransactionProcessing, setIsTransactionProcessing] = useState(false);\n  const [txCompleted, setTxCompleted] = useState(false);\n  const [txHash, setTxHash] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [iBgtBalance, setiBgtBalance] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [winkpoints, setWinkpoints] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  const { isConnected, address } = useAccount();\n  const { writeContractAsync } = useWriteContract();\n  const publicClient = usePublicClient();\n\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^0-9.]/g, ''); // Remove non-numeric characters except for decimal point\n    const isValid = !isNaN(parseFloat(value)) && value !== '';\n\n    setIsValidInput(isValid);\n    setInputValue(value);\n  };\n\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const response = await fetch(\"/api/proxy\");\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        \n        const data = await response.json();\n        const rewardToken = data.apr;\n        const APR = rewardToken * 100\n        const iBGTPrice = data.underlying_tokens.find((token: Token) => token.symbol === \"iBGT\")?.price;\n        setiBgtPrice(iBGTPrice)\n        setAprValue(APR);\n        setTvlValue(data.tvl)\n        setStatsData(data);\n      } catch (error) {\n        console.error(\"Error fetching stats:\", error);\n      }\n    };\n\n    fetchStats();\n  }, []);\n\n  const fetchWinkpoints = async () => {\n    if (!address) {\n      return;\n    }\n  \n    try {\n      setIsLoading(true); // Optional: Set loading state if needed\n  \n      const response = await fetch(\n        `https://inner-circle-seven.vercel.app/api/action/getPoints?address=${address}`,\n        {\n          method: \"GET\",\n        }\n      );\n  \n      if (!response.ok) {\n        throw new Error(`Failed to fetch: ${response.statusText}`);\n      }\n  \n      const data = await response.json();\n      console.log(\"Winkpoints data:\", data);\n  \n      if (data && data.points !== undefined) {\n        setWinkpoints(data.points);\n      } else {\n        console.warn(\"Invalid data format received:\", data);\n        setWinkpoints(0); // Set default value if data is unexpected\n      }\n    } catch (error) {\n      console.error(\"Error fetching winkpoints:\", error);\n      setWinkpoints(0); // Set default value in case of an error\n    } finally {\n      setIsLoading(false); // Optional: Reset loading state\n    }\n  };\n  \n\n  \n\n  const totalValue = isValidInput ? parseFloat(inputValue) * iBgtPrice : 0;\n\n  useEffect(() => {\n    if (isValidInput) {\n      if (totalValue > parseFloat(iBgtBalance)) {\n        setInsufficientBalance(true);\n      } else {\n        setInsufficientBalance(false);\n      }\n    } else {\n      setInsufficientBalance(false);\n    }\n  }, [totalValue, iBgtBalance, isValidInput]);\n\n\n  const checkAllowance = async () => {\n    if (!address) return BigInt(0);\n\n    try {\n      const allowance = await publicClient?.readContract({\n        address: \"0xac03CABA51e17c86c921E1f6CBFBdC91F8BB2E6b\",\n        abi: [\n          {\n            name: \"allowance\",\n            type: \"function\",\n            stateMutability: \"view\",\n            inputs: [\n              { name: \"owner\", type: \"address\" },\n              { name: \"spender\", type: \"address\" }\n            ],\n            outputs: [{ name: \"\", type: \"uint256\" }],\n          },\n        ],\n        functionName: \"allowance\",\n        args: [address, \"0x75F3Be06b02E235f6d0E7EF2D462b29739168301\"], // owner, spender\n      });\n\n      return allowance as bigint;\n    } catch (error) {\n      console.error(\"Error checking allowance:\", error);\n      return BigInt(0);\n    }\n  };\n\n  const handleStakeClick = async () => {\n    setErrorMessage(\"\");\n    setIsModalOpen(true);\n    console.log(address, \"amount\", inputValue);\n\n    let txHash = \"\";\n\n    try {\n      const inputAmount = ethers.utils.parseEther(inputValue).toString();\n      const currentAllowance = await checkAllowance();\n\n      console.log(currentAllowance, \"currentAllowance\");\n      console.log(inputAmount, \"inputAmount\");\n      // Check if approval is needed\n      if (BigInt(currentAllowance) < BigInt(inputAmount)) {\n        setApprovalProcessing(true);\n        // Execute the approval contract\n        const approvalTx = await writeContractAsync({\n          address: \"0xac03CABA51e17c86c921E1f6CBFBdC91F8BB2E6b\",\n          abi: approvalContractABI,\n          functionName: \"approve\",\n          args: [\n            \"0x75F3Be06b02E235f6d0E7EF2D462b29739168301\",\n            inputAmount,\n          ],\n          chain: berachain,\n          account: address as `0x${string}`,\n        });\n\n        await publicClient?.waitForTransactionReceipt({ hash: approvalTx });\n        setApprovalProcessing(false);\n      }\n\n      // After approval (or if approval wasn't needed), execute the stake contract\n      setIsTransactionProcessing(true);\n      const stakeTx = await writeContractAsync({\n        address: \"0x75F3Be06b02E235f6d0E7EF2D462b29739168301\",\n        abi: contractABI,\n        functionName: \"stake\",\n        args: [inputAmount],\n        chain: berachain,\n        account: address as `0x${string}`,\n      });\n\n      txHash = stakeTx;\n      await publicClient?.waitForTransactionReceipt({ hash: stakeTx });\n      setIsTransactionProcessing(false);\n      setTxHash(txHash);\n\n      await postUserAddressForPoints();\n\n    } catch (error) {\n      console.error(\"Error:\", error);\n      // Extract a user-friendly error message\n      let errorMsg = \"Transaction failed\";\n      if (error instanceof Error) {\n        // Try to extract a more specific message\n        if (error.message.includes(\"user rejected transaction\")) {\n          errorMsg = \"Transaction rejected by user\";\n        } else if (error.message.includes(\"insufficient funds\")) {\n          errorMsg = \"Insufficient funds for gas\";\n        } else {\n          // Get the most relevant part of the error\n          errorMsg = `Error: ${error.message.split('\\n')[0]}`;\n        }\n      }\n      setErrorMessage(errorMsg);\n      setApprovalProcessing(false);\n      setIsModalOpen(false); // Close modal on error\n    } finally {\n      setTxCompleted(!!txHash);\n      fetchWinkpoints()\n    }\n  };\n\n  const postUserAddressForPoints = async () => {\n    try {\n      const response = await fetch(\n        \"https://inner-circle-seven.vercel.app/api/action/setPoints\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            to: address,\n          }),\n        }\n      );\n  \n      if (!response.ok) {\n        throw new Error(\"Failed to update points\");\n      }\n  \n      const data = await response.json();\n      console.log(\"Points updated:\", data);\n  \n      // ✅ Fetch updated Winkpoints after posting user address\n      setWinkpoints(0)\n      fetchWinkpoints();\n    } catch (error) {\n      console.error(\"Error updating points:\", error);\n    }\n  };\n\n  useEffect(() => {\n\n  const fetchBalances = async () => {\n    if (!address || ! publicClient) return;\n\n    try {\n      const iBgtBalance = await publicClient?.readContract({\n        address: \"0xac03CABA51e17c86c921E1f6CBFBdC91F8BB2E6b\",\n        abi: [\n          {\n            name: \"balanceOf\",\n            type: \"function\",\n            stateMutability: \"view\",\n            inputs: [{ name: \"account\", type: \"address\" }],\n            outputs: [{ name: \"\", type: \"uint256\" }],\n          },\n        ],\n        functionName: \"balanceOf\",\n        args: [address],\n      });\n\n      setiBgtBalance(ethers.utils.formatUnits(iBgtBalance as bigint, 18));\n      console.log(iBgtBalance);\n    } catch (error) {\n      console.error(\"Error fetching balances:\", error);\n    }\n  };\n  fetchBalances();\n}, [address, publicClient]);\n\n\n  useEffect(() => {\n    // fetchBalances();\n    fetchWinkpoints();\n  }, [address, fetchWinkpoints, publicClient]);\n\n  const formatTVL = (tvl: number) => (tvl / 1_000_000).toFixed(2);\n  const buttonDisabled = !isValidInput || insufficientBalance || isTransactionProcessing || approvalProcessing;\n\n\n  if (!statsData) {\n    return (\n      <div className=\"flex flex-col h-screen justify-center items-center bricolage-font\">\n        <Image\n          src=\"/images/ibgt-logo.svg\"\n          width={50}\n          height={50}\n          className=\"animate-spin\"\n          alt=\"stBGT\"\n        />\n        <p>Loading...</p>\n      </div>\n    );\n  }\n\n\n\n  return (\n    <>\n      <div className=\"container mx-auto bricolage-font\">\n        <div className=\"infrared-card max-w-[450px] mx-auto\">\n          <div className=\"infrared-card-header bg-product-header-gradient bg-cover border-gray-300 border rounded-t-xl space-y-2\">\n            <div className=\" flex justify-between items-center\">\n            <div className=\"flex items-center space-x-4 \">\n              <Image\n                src=\"/images/ibgt-logo.svg\"\n                alt=\"iBGT logo\"\n                width={30}\n                height={30}\n              />\n              <h1 className=\"text-2xl font-bold\">iBGT</h1>\n            </div>\n            <p className=\" bg-gray-800/50 text-white p-2 rounded-xl text-sm px-3\">Wink points: {winkpoints}</p>\n            </div>\n            <p className=\"\">\n              Stake iBGT to earn rewards.\n            </p>\n\n\n            <div className=\"grid grid-cols-3 gap-4\">\n              <div>\n                <div className=\"text-sm opacity-80\">APR</div>\n                <div className=\"text-xl font-medium\">{aprValue?.toFixed(0)}%</div>\n              </div>\n              <div>\n                <div className=\"text-sm opacity-80\">TVL</div>\n                <div className=\"text-xl font-medium\">$ {tvlvalue !== null ? formatTVL(tvlvalue) : \"Loading...\"}M</div>\n              </div>\n              <div>\n                <div className=\"text-sm opacity-80\">% of iBGT staked</div>\n                <div className=\"text-xl font-medium\">79.03%</div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"p-4 border-gray-300 border border-t-0 rounded-b-xl space-y-2\">\n            <div className=\" flex justify-between items-center\">\n              <p>Available: {iBgtBalance} iBGT</p>\n              <button className=\" bg-gray-800 text-white p-0.5 px-2 rounded-lg\" onClick={() => setInputValue(iBgtBalance)}> MAX</button>\n            </div>\n            <div className=\"border p-4 border-gray-300 rounded-xl\">\n              <div className=\" flex\">\n                <input\n                  type=\"text\"\n                  className=\" w-full bg-transparent focus:outline-none text-xl\"\n                  placeholder=\"0.0\"\n                  value={inputValue}\n                  onChange={handleInputChange}\n                />\n                <Image src=\"/images/ibgt-logo.svg\" width={24} height={24} alt=\"iBGT\" />\n              </div>\n              <p>${totalValue?.toFixed(2) || 0.0}</p>\n            </div>\n\n            {isConnected ? (\n              <button\n                className='connect-button w-full flex justify-center'\n                disabled={buttonDisabled}\n                onClick={handleStakeClick}\n              >\n                {insufficientBalance\n                  ? 'Insufficient Balance'\n                  : 'Stake'\n                }\n              </button>\n            ) : (\n              <CustomButton />\n            )}\n          </div>\n\n        </div>\n        <p className=\" text-center text-black mt-2\">Powered by winks.fun</p>\n      </div>\n\n      <TransactionModal\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        txHash={txHash}\n        isProcessing={isTransactionProcessing}\n        isApproving={approvalProcessing}\n      />\n\n    </>\n  );\n}\n\nexport default IBGTPage;"],"names":[],"mappings":"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","debugId":null}}]
}