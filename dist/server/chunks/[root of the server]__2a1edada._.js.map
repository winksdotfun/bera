{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/thirumurugansivalingam/Desktop/winks/bera/src/app/api/proxy/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\n\n// These configs are required for static export\nexport const dynamic = \"force-static\";\nexport const revalidate = false;\n\nexport async function GET() {\n  try {\n    console.log(\"Fetching data from infrared.finance, in proxy\");\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), 5000);\n    \n    const response = await fetch(\n      \"https://infrared.finance/api/vault/infrared-ibgt?chainId=80094\",\n      {\n        signal: controller.signal,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"User-Agent\": \"Mozilla/5.0\"\n        }\n      }\n    );\n\n    console.log(\"Response received from infrared.finance\");\n    console.log(response);\n    \n    clearTimeout(timeoutId);\n    \n    if (!response.ok) {\n      throw new Error(`Failed to fetch: ${response.status} ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    console.log(\"Data fetched successfully\");\n    \n    return NextResponse.json(data, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\", \n        \"Access-Control-Allow-Methods\": \"GET, OPTIONS\",\n        \"Access-Control-Allow-Headers\": \"Content-Type\",\n      },\n    });\n  } catch (error) {\n    console.error(\"Proxy API error:\", error);\n    \n    // Return error without hardcoded data\n    return NextResponse.json(\n      { \n        message: \"Error fetching data\", \n        error: error instanceof Error ? error.message : String(error)\n      },\n      { \n        status: 500,\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\"\n        }\n      }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA;;AAGO,MAAM,UAAU;AAChB,MAAM,aAAa;AAEnB,eAAe;IACpB,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,MAAM,aAAa,IAAI;QACvB,MAAM,YAAY,WAAW,IAAM,WAAW,KAAK,IAAI;QAEvD,MAAM,WAAW,MAAM,MACrB,kEACA;YACE,QAAQ,WAAW,MAAM;YACzB,SAAS;gBACP,UAAU;gBACV,cAAc;YAChB;QACF;QAGF,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC;QAEZ,aAAa;QAEb,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,iBAAiB,EAAE,SAAS,MAAM,CAAC,CAAC,EAAE,SAAS,UAAU,EAAE;QAC9E;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,QAAQ,GAAG,CAAC;QAEZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAM;YAC7B,SAAS;gBACP,+BAA+B;gBAC/B,gCAAgC;gBAChC,gCAAgC;YAClC;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oBAAoB;QAElC,sCAAsC;QACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO;QACzD,GACA;YACE,QAAQ;YACR,SAAS;gBACP,+BAA+B;gBAC/B,gBAAgB;YAClB;QACF;IAEJ;AACF","debugId":null}}]
}